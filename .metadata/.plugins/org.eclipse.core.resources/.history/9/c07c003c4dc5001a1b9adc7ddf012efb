package ca.on.eois.api.cm.rest.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.context.request.NativeWebRequest;

import ca.on.eois.api.ApiUtil;
import ca.on.eois.api.PersonApi;
import ca.on.eois.api.model.ClientSearchResultDetails;
import ca.on.eois.api.model.EOAPIResponse;
import ca.on.eois.api.model.PersonSearchKey;
import ca.on.eois.api.model.PersonSearchResultDetails;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

import java.util.Optional;

import javax.validation.Valid;

//import javax.validation.Valid;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-07-13T14:18:47.964482700-04:00[America/New_York]")

@Controller
@RequestMapping("${openapi.eOAPIDefinition.base-path:}")
public class MyPersonApiController implements ClientsApi {

	  @ApiOperation(value = "", nickname = "searchClient", notes = "", response = ClientSearchResultDetails.class, tags={  })
	    @ApiResponses(value = { 
	        @ApiResponse(code = 400, message = "Bad request", response = EOAPIResponse.class),
	        @ApiResponse(code = 401, message = "Unauthorized", response = EOAPIResponse.class),
	        @ApiResponse(code = 403, message = "Forbidden", response = EOAPIResponse.class),
	        @ApiResponse(code = 500, message = "Internal error", response = EOAPIResponse.class),
	        @ApiResponse(code = 200, message = "operation successfully", response = ClientSearchResultDetails.class) })
	    @RequestMapping(value = "/clients",
	        produces = { "*/*" }, 
	        method = RequestMethod.GET)
	    default ResponseEntity<ClientSearchResultDetails> searchClient(@ApiParam(value = "The client first name") @Valid @RequestParam(value = "firstName", required = false) String firstName,@ApiParam(value = "The client first name") @Valid @RequestParam(value = "lastName", required = false) String lastName,@ApiParam(value = "The client date of birth") @Valid @RequestParam(value = "dateOfBirth", required = false) String dateOfBirth,@ApiParam(value = "The client date of birth") @Valid @RequestParam(value = "gender", required = false) String gender,@ApiParam(value = "The client date of birth") @Valid @RequestParam(value = "clientReferenceNumber", required = false) String clientReferenceNumber) {
	        getRequest().ifPresent(request -> {
	            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
	                if (mediaType.isCompatibleWith(MediaType.valueOf("*/*"))) {
	                    ApiUtil.setExampleResponse(request, "*/*", "{  \"eoAPIResponse\" : {    \"resultInd\" : true,    \"message\" : \"message\"  },  \"clientSearchResultDetails\" : [ {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"referenceNumber\" : \"referenceNumber\",    \"city\" : \"city\",    \"postalCode\" : \"postalCode\",    \"dateOfBirth\" : \"dateOfBirth\"  }, {    \"firstName\" : \"firstName\",    \"lastName\" : \"lastName\",    \"referenceNumber\" : \"referenceNumber\",    \"city\" : \"city\",    \"postalCode\" : \"postalCode\",    \"dateOfBirth\" : \"dateOfBirth\"  } ]}");
	                    break;
	                }
	            }
	        });
	        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

	    }

  

 

}
